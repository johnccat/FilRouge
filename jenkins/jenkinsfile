pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('81a7dab7-79e5-44f7-90f0-fdd5f698a8fd')
    }

    stages {
        stage('Build') {
            steps {
                //Log into dockerhub
                sh """echo ${env.DOCKERHUB_CREDENTIALS_PSW} |
                   docker login -u ${env.DOCKERHUB_CREDENTIALS_USR} --password-stdin"""

                // Build docker images
                sh "docker build worker -t \"poecgroup4/filrouge-worker:${env.BUILD_NUMBER}\""
                sh "docker build result -t \"poecgroup4/filrouge-result:${env.BUILD_NUMBER}\""
                sh "docker build vote -t \"poecgroup4/filrouge-vote:${env.BUILD_NUMBER}\""

                //sh "docker build vote -t \"poecgroup4/filrouge-vote:${env.BUILD_NUMBER}\""
                //sh "docker build vote -t \"poecgroup4/filrouge-vote:${env.BUILD_NUMBER}\""

                // push images on registry
                sh "docker push poecgroup4/filrouge-worker:${env.BUILD_NUMBER}"
                sh "docker push poecgroup4/filrouge-result:${env.BUILD_NUMBER}"
                sh "docker push poecgroup4/filrouge-vote:${env.BUILD_NUMBER}"

            }
        }
        stage('Test') {
            steps {
                echo 'Testing...selenium'   
            }
        }
        stage('Deploying') {
            steps {
                // Arreter vieux filRouge et lance une autre version
                sh "ssh group4@filrougeprod 'echo ${env.DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${env.DOCKERHUB_CREDENTIALS_USR} --password-stdin'"
                sh 'ssh group4@filrougeprod "mkdir -p /app/FilRouge"'
                sh 'scp ./docker-compose.images.yml group4@filrougeprod:/app/FilRouge/docker-compose.yml'
                sh "ssh group4@filrougeprod cd /app/FilRouge && BUILD_NUMBER=${env.BUILD_NUMBER} docker compose down "
                sh "ssh group4@filrougeprod cd /app/FilRouge && BUILD_NUMBER=${env.BUILD_NUMBER} docker compose pull "
                sh "ssh group4@filrougeprod cd /app/FilRouge && BUILD_NUMBER=${env.BUILD_NUMBER} docker compose up -d"
            }
        }
    }
    
        post {
        failure {
            // notify users when the Pipeline fails
            mail to: 'johnccat2005@yahoo.fr',
                    subject: "KO - ${currentBuild.result} - ${currentBuild.fullDisplayName}",
                    body: " Build ${env.BUILD_NUMBER} failed during ${env.STAGE_NAME}....\nCheck ${env.BUILD_URL}"
        }
        success {
            // notify users when the Pipeline fails
            mail to: 'johnccat2005@yahoo.fr',
                    subject: "OK - ${currentBuild.result} - ${currentBuild.fullDisplayName}",
                    body: "Duration=${currentBuild.duration} \nCheck ${env.BUILD_URL}"
        }
    }
}
